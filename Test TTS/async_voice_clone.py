import requests
import time
import sys
import os

# üîê Nh·∫≠p API key
API_KEY = ""

# === KI·ªÇM TRA SERVER TR∆Ø·ªöC KHI UPLOAD ===
print("üîç Ki·ªÉm tra tr·∫°ng th√°i server...")
try:
    test_url = "https://api.ausynclab.org/api/v1/voices/list"
    test_res = requests.get(test_url, headers={"X-API-Key": API_KEY, "accept": "application/json"}, timeout=30)
    test_res.raise_for_status()
    print("‚úÖ Server ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng")
except requests.exceptions.RequestException as e:
    print("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server:", e)
    sys.exit(1)

# === B∆Ø·ªöC 1: Clone gi·ªçng gi√°o vi√™n ===
print("üì§ ƒêang ƒëƒÉng k√Ω gi·ªçng n√≥i...")
voice_register_url = "https://api.ausynclab.org/api/v1/voices/register"
query_params = {
    "name": "GV_Toan_Lop5",
    "language": "vi",
    "gender": "FEMALE",
    "age": "MIDDLE_AGED",
    "use_case": "NARRATION"
}
headers = {
    "X-API-Key": API_KEY,
    "accept": "application/json"
}

# Ki·ªÉm tra file audio
audio_file_path = "teacher_sample.mp3"
if not os.path.exists(audio_file_path):
    print("‚ùå File teacher_sample.mp3 kh√¥ng t·ªìn t·∫°i")
    sys.exit(1)
if os.path.getsize(audio_file_path) > 10 * 1024 * 1024:  # Ki·ªÉm tra file > 10MB
    print("‚ö†Ô∏è File teacher_sample.mp3 qu√° l·ªõn (>10MB), n√™n n√©n ho·∫∑c c·∫Øt ng·∫Øn")
    sys.exit(1)

try:
    with open(audio_file_path, "rb") as f:
        files = {"audio_file": (audio_file_path, f, "audio/mpeg")}
        res = requests.post(
            voice_register_url,
            headers=headers,
            params=query_params,
            files=files,
            timeout=60  # TƒÉng timeout l√™n 60 gi√¢y
        )
        res.raise_for_status()
except requests.exceptions.ReadTimeout:
    print("‚ùå H·∫øt th·ªùi gian ch·ªù khi upload gi·ªçng n√≥i (timeout). Th·ª≠ gi·∫£m k√≠ch th∆∞·ªõc file ho·∫∑c ki·ªÉm tra m·∫°ng.")
    sys.exit(1)
except requests.exceptions.ConnectionError as e:
    print("‚ùå L·ªói k·∫øt n·ªëi m·∫°ng:", e)
    sys.exit(1)
except requests.exceptions.HTTPError as e:
    print("‚ùå L·ªói HTTP:", e, res.text)
    sys.exit(1)
except FileNotFoundError:
    print("‚ùå File teacher_sample.mp3 kh√¥ng t·ªìn t·∫°i")
    sys.exit(1)

voice_id = res.json().get("result", {}).get("id")
if not voice_id:
    print("‚ùå Kh√¥ng t√¨m th·∫•y voice_id trong ph·∫£n h·ªìi:", res.json())
    sys.exit(1)
print("‚úÖ ƒê√£ t·∫°o gi·ªçng th√†nh c√¥ng. Voice ID:", voice_id)

# === B∆Ø·ªöC 2: T·∫°o b√†i gi·∫£ng t·ª´ vƒÉn b·∫£n ===
print("üé§ ƒêang t·∫°o b√†i gi·∫£ng t·ª´ vƒÉn b·∫£n...")
tts_url = "https://api.ausynclab.org/api/v1/speech/text-to-speech"
data = {
    "audio_name": "bai_giang_toan_lop5",
    "text": "Ch√†o c√°c em. H√¥m nay ch√∫ng ta h·ªçc v·ªÅ ph√¢n s·ªë th·∫≠p ph√¢n.",
    "voice_id": voice_id,
    "speed": 1.0,
    "model_name": "myna-1",
    "language": "vi",
    "callback_url": "https://webhook.site/your-unique-id"  # Thay b·∫±ng URL th·ª±c t·ª´ webhook.site
}
headers_tts = {
    "X-API-Key": API_KEY,
    "Content-Type": "application/json",
    "accept": "application/json"
}

try:
    res_tts = requests.post(tts_url, headers=headers_tts, json=data, timeout=30)
    res_tts.raise_for_status()
except requests.exceptions.ConnectionError as e:
    print("‚ùå L·ªói k·∫øt n·ªëi m·∫°ng:", e)
    sys.exit(1)
except requests.exceptions.HTTPError as e:
    print("‚ùå L·ªói HTTP:", e, res_tts.text)
    sys.exit(1)

audio_id = res_tts.json().get("result", {}).get("audio_id")
if not audio_id:
    print("‚ùå Kh√¥ng t√¨m th·∫•y audio_id trong ph·∫£n h·ªìi:", res_tts.json())
    sys.exit(1)
print("‚úÖ ƒê√£ g·ª≠i y√™u c·∫ßu t·∫°o audio. Audio ID:", audio_id)

# === B∆Ø·ªöC 3: L·∫•y th√¥ng tin audio (polling) ===
print("‚è≥ ƒêang ƒë·ª£i x·ª≠ l√Ω √¢m thanh...")
max_attempts = 15
for attempt in range(max_attempts):
    try:
        audio_info_url = f"https://api.ausynclab.org/api/v1/speech/{audio_id}"
        res_info = requests.get(audio_info_url, headers={"X-API-Key": API_KEY, "accept": "application/json"}, timeout=30)
        res_info.raise_for_status()
        audio_data = res_info.json().get("result", {})
        if audio_data.get("state") == "SUCCEED" and audio_data.get("audio_url"):
            audio_url = audio_data["audio_url"]
            print("üéß Link audio:", audio_url)
            break
        print(f"‚åõ Audio ch∆∞a s·∫µn s√†ng, th·ª≠ l·∫°i sau {attempt + 1}/{max_attempts}...")
        time.sleep(5)
    except requests.exceptions.ConnectionError as e:
        print("‚ùå L·ªói k·∫øt n·ªëi m·∫°ng:", e)
        sys.exit(1)
    except requests.exceptions.HTTPError as e:
        print("‚ùå L·ªói HTTP:", e, res_info.text)
        sys.exit(1)
else:
    print("‚ùå H·∫øt th·ªùi gian ch·ªù, audio kh√¥ng s·∫µn s√†ng")
    sys.exit(1)

# === B∆Ø·ªöC 4: T·∫£i file audio v·ªÅ ===
print("‚¨áÔ∏è ƒêang t·∫£i file b√†i gi·∫£ng v·ªÅ...")
try:
    audio_file = requests.get(audio_url, timeout=30).content
    with open("bai_giang_ausync.mp3", "wb") as f:
        f.write(audio_file)
    print("üéâ ƒê√£ l∆∞u b√†i gi·∫£ng t·∫°i: bai_giang_ausync.mp3")
except requests.exceptions.ConnectionError as e:
    print("‚ùå L·ªói k·∫øt n·ªëi m·∫°ng khi t·∫£i:", e)
    sys.exit(1)
except Exception as e:
    print("‚ùå L·ªói khi t·∫£i file:", e)
    sys.exit(1)